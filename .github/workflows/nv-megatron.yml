name: nv-megatron

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'blogs/**'
      - 'deepspeed/inference/v2/**'
      - 'tests/unit/inference/v2/**'
  merge_group:
    branches: [ master ]
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    runs-on: [self-hosted, nvidia, cu116, v100]

    steps:
      - uses: actions/checkout@v2

      - name: environment
        run: |
          echo "JobID: $AISC_NODE_INSTANCE_ID"
          nvidia-smi
          which python
          python --version
          which nvcc
          nvcc --version
          pip install --upgrade pip
          pip uninstall --yes torch torchvision triton
          pip install torch torchvision --extra-index-url https://download.pytorch.org/whl/cu116
          python -c "import torch; print('torch:', torch.__version__, torch)"
          python -c "import torch; print('CUDA available:', torch.cuda.is_available())"

      - name: Install
        run: |
          pip uninstall --yes deepspeed
          pip install .[dev]
          ds_report

      - name: Install apex
        run: |
          git clone https://github.com/NVIDIA/apex.git
          cd apex
          CURRENT_VER=$(git rev-parse HEAD)
          INSTALLED_VER=$(cat /blob/apex/.venv_installed_version)
          if [[ "$CURRENT_VER" != "$INSTALLED_VER" ]]; then
            pip install -v --disable-pip-version-check --no-cache-dir --no-build-isolation --config-settings "--global-option=--cpp_ext" --config-settings "--global-option=--cuda_ext" --target=/blob/apex/ --upgrade .
            git rev-parse HEAD > /blob/apex/.venv_installed_version
          fi
          echo PYTHONPATH=$PYTHONPATH:/blob/apex/ >> $GITHUB_ENV

      - name: Python environment
        run: |
          pip list

      - name: Unit tests
        run: |
          git clone --branch mrwyattii/add-unit-test https://github.com/microsoft/Megatron-DeepSpeed.git
          cd Megatron-DeepSpeed
          pip install .
          unset TORCH_CUDA_ARCH_LIST # only jit compile for current arch
          if [[ -d ./torch-extensions ]]; then rm -rf ./torch-extensions; fi
          cd tests
          MEGATRON_CKPT_DIR=/blob/megatron_ckpt/ TORCH_EXTENSIONS_DIR=./torch-extensions pytest --color=yes --durations=0 --verbose ./
